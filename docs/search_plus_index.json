{"./":{"url":"./","title":"README","keywords":"","body":"RVBOOK 文档 成员：江芳、程晓宇、周喆、孙杨 Git操作 0、获取帮助 git --help 1、克隆到本地 git clone https://github.com/zznjupt/RVBOOK.git 2、上传到远程仓库 git pull //确保最新版本 git add . git commit -m\"XXXX\" git push "},"TrustCom2022/meeting1.html":{"url":"TrustCom2022/meeting1.html","title":"学习框架和短期要求","keywords":"","body":"6.2日小会讨论 https://docs.qq.com/doc/DRENqbWZCTVVWcmF6?u=c0e3e6d7852c4a95b8460bddc96738c8&&_t=1654675092605 学习框架 目前确定了研究目标CPU为：XUANTIE-C910 之前讨论了用实验室服务器作为仿真平台，但是最好个人PC都可以把工具链安装编译和进行实验，因此需要做的事： 仿真工具链以及工具链使用方法：需要编写说明文档，说明文档上传至本网页 自己的环境和依赖项 标注工具链下载出处和版本号 步骤完整，流程清晰 整理所有遇到的问题，如果解决，请给出解决方法，未解决问题大家一起想办法 上传方法 将本文档git pull下来之后在 TrustCom2022 文件夹下新建.md文件，写好后push上即可，网页端不会及时更新需要我这边编译一下，我会在每天的不固定时间编译上传 要明确自己在做什么事情，每件事请最好有独立的文档 Good luck！ "},"TrustCom2022/cxydebug.html":{"url":"TrustCom2022/cxydebug.html","title":"程晓宇Debug","keywords":"","body":"搭建qemu验证环境 参考的是c9xx linux-5.10 的 readme.txt -> Quick Start for qemu run 章节: https://github.com/c-sky/buildroot/releases/tag/v1.0.10.1 调试日记 缺失库\\ 在运行这一行指令时 LD_LIBRARY_PATH=./host/lib ./host/csky-qemu/bin/qemu-system-riscv64 -M virt q-kernel fw_jump.elf -device loader,file=Image,addr=0x80200000 -append \"rootwait root=/dev/vda ro\" -drive file=rootfs.ext2,format=raw,id=hd0 -device virtio-blk-device,drive=hd0 -nographic -smp 1\\ 会出现如下报错 文档里给的是基于Ubuntu16.04的，我使用的是Ubuntu20.04所以在安装前要查看缺失的库； 解决方案 从https://ftp.gnu.org/gnu/nettle/ 下载源码（我下载的是3.2版本的可以用） 执行 ./configure && make -j 4 直接将编译出来的动态链接库libnettle.so 重命名为之前not found的 libnettle.so.6 后移动到usr/lib "},"TrustCom2022/zz.html":{"url":"TrustCom2022/zz.html","title":"Verilator仿真-周喆","keywords":"","body":"玄铁C910 RTL -- verilator仿真记录 环境搭建 玄铁C910 IP 包开源在github： git clone https://github.com/T-head-Semi/openc910.git 玄铁C910 IP 包由以下两部分组成： C910源码包，包含固定功能配置的 C910 RTL 代码； C910 Smart平台，提供了 C910 的参考集成设计，仿真环境和测试用例等，帮助熟悉 C910的功能和使用方法，并辅助 C910 的集成工作 该 IP 包所需要的环境在玄铁C910手册里： 玄铁C910IP中的 perl 脚本依赖 perl 5.10.1 或以上版本； Make 版本为 3.8.1； EDA仿真工具：Icarus Verilog（iverilog）10.2，Synopsys VCS 2019.06及以上版本，或者Cadence Xcelium19.09及以上版本；带UPF的低功耗仿真仅在 VCS 2020.12版本上进行了测试 Smart 平台编译测试用例依赖平头哥玄铁处理器 RISC-V工具链 2.0.3 及以上版本 根据说明，我们方便使用的开源仿真工具只有iverilog，复旦微的研究生在仓库main分支上上传了支持verilator（4.215 or later）仿真的脚本，因此本次环境搭建将使用verilator仿真器 verilator安装 本实验机器OS：ubuntu18.04 LTS 安装流程从官网上贴了下来： # Prerequisites: #sudo apt-get install git perl python3 make autoconf g++ flex bison ccache #sudo apt-get install libgoogle-perftools-dev numactl perl-doc #sudo apt-get install libfl2 # Ubuntu only (ignore if gives error) #sudo apt-get install libfl-dev # Ubuntu only (ignore if gives error) #sudo apt-get install zlibc zlib1g zlib1g-dev # Ubuntu only (ignore if gives error) git clone https://github.com/verilator/verilator # Only first time # Every time you need to build: unsetenv VERILATOR_ROOT # For csh; ignore error if on bash unset VERILATOR_ROOT # For bash cd verilator git pull # Make sure git repository is up-to-date git tag # See what versions exist #git checkout master # Use development branch (e.g. recent bug fixes) #git checkout stable # Use most recent stable release #git checkout v{version} # Switch to specified release version autoconf # Create ./configure script ./configure # Configure and create Makefile make -j `nproc` # Build Verilator itself (if error, try just 'make') sudo make install 玄铁处理器RISC-V工具链下载 https://occ.t-head.cn/community/download?id=3948120165480468480 我下载的版本是 Xuantie-900-gcc-elf-newlib-x86_64-V2.4.0-20220428.tar.gz 仿真流程 首先修改openc910 project下的两个用于部署环境的.csh文件修改为.sh文件： openc910/C910_RTL_FACTORY/setup/setup.csh #!/bin/csh set pattern = \"\\/setup\"`echo '$'` setenv CODE_BASE_PATH `pwd | perl -pe \"s/$pattern//\"` echo \"Root of code base has been specified as:\\n $CODE_BASE_PATH\" ->openc910/C910_RTL_FACTORY/setup/setup.sh #!/usr/bin/bash pattern=\"\\/setup\"`echo '$'` export CODE_BASE_PATH `pwd | perl -pe \"s/$pattern//\"` echo \"Root of code base has been specified as:\\n $CODE_BASE_PATH\" openc910/smart_run/setup/example_setup.csh #!/bin/csh setenv TOOL_EXTENSION /tools/riscv/riscv64-elf-x86_64/bin echo 'Toolchain path($TOOL_EXTENSION):' echo \" $TOOL_EXTENSION\" ->openc910/smart_run/setup/example_setup.sh #!/usr/bin/bash export TOOL_EXTENSION=/home/dios/XUANTIE/Xuantie-900-gcc-elf-newlib-x86_64-V2.4.0-20220428/Xuantie-900-gcc-elf-newlib-x86_64-V2.4.0/bin echo 'Toolchain path($TOOL_EXTENSION):' echo \" $TOOL_EXTENSION\" 接着，执行两个setup脚本，注意需要严格按照下面步骤执行，因为启动脚本的位置影响结果 cd openc910/C910_RTL_FACTORY source setup/setup.sh cd ../smart_run source setup/example_setup.sh 如果执行sh脚本报错如下： :Syntax error: Bad fd number 可能是sh链接到了dash，因此需要检查链接情况： ls -l /bin/sh 如果得到的结果是 /bin/sh -> dash 那么执行以下命令即可 sudo mv /bin/sh /bin/sh.orig sudo ln -s /bin/bash /bin/sh 再次检查应该得到正确的结果 /bin/sh -> /bin/bash 接着，在/smart_run下创建/work目录 mkdir work 然后即可进行仿真工作，本次实验选取的备选CASE为hello_world make cleanVerilator make compile SIM=verilator make buildVerilator make buildcase CASE=hello_world make runVerilator 但是每次运行buildVerilator的时候总会运行过程中死机重启，初步认为是内存不够的原因，分配了26G内存依旧存在这个问题，之后在服务器上跑试试看 "},"CIRED/outline.html":{"url":"CIRED/outline.html","title":"论文大纲","keywords":"","body":"CIRED论文大纲 0、切入点 聚焦于电力主控芯片？配电融合终端？ 摘要 泛在电力物联网要求电力系统从原来的集中监控模式转变为分布式、物联网化的泛在模式。配电物联网终端需要高性能、低功耗（、安全性）的微处理器（MCU）作为支撑。而RISC-V指令集因其精简、开源、支持自定义扩展等优势，在配电融合终端中具有广泛的使用前景。本文针对基于RISC-V指令集架构的融合终端，研究和探索MCU级的攻击和防御策略对其在安全、性能、应用支持等方面的影响。该研究采用软件仿真方法结合FPGA原型验证进行，为面向配电终端应用的MCU架构设计提供新方案。 关键词：电力终端、数据保护、RISC-V、攻击与防御 1.引言 介绍电力融合终端与芯片安全的关系，引入对芯片安全的讨论； 电力网络系统中的安全防护要防止信息数据被非授权访问者的窃取、篡改和破坏。利用幽灵攻击读取终端的秘密数据对电力网络系统的安全造成威胁。 BOOM高性能乱序处理器——>可用于电力行业？ 通用芯片可满足电力领域当前的需求 BOOM开源、高性能、低功耗 1.1 配电终端安全防护现状及风险 1.2 开源 RISC-V 处理器 BOOM 1.3 幽灵与熔断 2.Speculative attack replication 2.1 Implementation Details 2.2 Bounds Check Bypass Attack（V1） 2.3 Branch Target Injection Attack（V2） 3.Result and analysis of XXX 3.1 Experimental Setup and Results 3.2 Experimental analysis on hardware platforms 3.1 安全性分析security analysis 3.2 性能开销评估 4.Mitigation Options 芯片层级防御方法总结 通过提出幽灵攻击防御策略 增强RISC-V安全性 能否提出针对电力芯片安全的轻量级的缓解措施 5.相关工作 电网安全保护措施，从不同层的措施—》芯片层、终端层等 RISC-V架构安全 6.总结 6.1 主要贡献 基于RISC-V架构用于电网保护的研究工作目前较少 进行了电力芯片常见攻击及防御方法的验证 参考文献 参考资料 电力主控芯片有了“中国芯” RISC-V’s Role in Securing IoT-Connected Devices 基于RISC-V的MCU内核TaiShan200 Spectre and Meltdown explained: A comprehensive guide for professionals "},"CIRED/dataprotect.html":{"url":"CIRED/dataprotect.html","title":"电网数据保护调研","keywords":"","body":"电网数据保护调研 电力系统中各种电压的变电所及输配电线路组成的整体，称为电力网，简称电网。它包含变电、输电、配电三个单元。电力网的任务是输送与分配电能，改变电压。 电网按其在电力系统中的作用不同，分为输电网和配电网。 输电网是以高压甚至超高压电将发电厂、变电所或变电所之间连接起来的送电网络，所以又称为电力网中的主网架。 配电网是承担分配的任务，通过配电设施就地分配或者按电压逐级分配给各类用户。 SG（智能电网，smart grid）涉及的两个关键设备[1]^{[1]}​[1]​​： （1） 智能/高级电表(SMs)，装备房屋，工厂、机构 等。它们记录能源消耗数据和其他信息，为计费或管理做 好准备。它们可以根据请求或针对某些事件对实用程序进 行定期报告，也可响应实用程序的请求(例如，软件更新、实时定价、负载脱落、能量切断等)，这得益于它们的双向通信能力。它们可以选择发挥当家能源管理系统的角色，通过控制/管理房子内智能设备 （冰箱、烤箱、空调、电动车等)来监控能源消耗。 （2）先进的计量基础设施(AMI )，负责收集、分析、 存储和提供SMS发送给适当授权方的计量数据(例如，能源提供商、公用事业机构、SG操作员、电表数据管理服务等)，以便它们可以进行(计费，停机管理，需求预测 等)。AMI 还负责向 SMS 中的授权方发送请求、命令，定价信息和软件更新。 相关问题： 隐私问题： 智能电表和智能家电在住宅中的应用，比能源消耗更能说明问题。它们生成的细粒度数据可能会损害终端用户的隐私，比如泄露用户的起床睡觉、 吃饭时间等，是否在家、在度假等等[1]^{[1]}​[1]​​。在智能电力系统进行配置的过程当中，需要对用户信息进行提取分析和信息传递。一些不法分子通过攻击电网系统或终端非法获取用户用电信息，出现了数据转卖或窃电情况，严重危害了电网系统的安全性与稳定性[2]^{[2]}​[2]​​。 数据安全需求[3]^{[3]}​[3]​​： 数据完整性，要确保(接收到的)数据没有以未经授权的方式进行修改。例如，智能仪表需要保证软件更新的完整性，除了源程序。数据机密性，确保数据(存储或传输)仅对预期的接收者可访问。例如，最终用户的消耗只需要SG的运营商和能源供应商知道。 用户隐私，保证与用户(能源消费终端用户)相关的任何数据——brut、推断或计算数据 ——未经其明确批准不能获得，且仅用于预期目的。例如，用于账单目的的能源消耗数据不能用于其他目的。 配电终端： 配电自动化系统属于电力系统中的重要控制系统， 它在提高配电网供电可靠性与供电质量、提升配电网精益化管理水平等方面发挥重要作用；配电终端是配电自动化系统的重要组成部分，承担着配电系统的数据采集和控制指令的执行任务[4]^{[4]}​[4]​​。 智能配电网是智能电网重要的组成部分，对智能电网的发展起着举足轻重的作用。智能配电网(Smart Distribution Grid ,SDG)，是未来配电网的发展方向，是一个由电力设备和通信设备组成的全新配电系统。智能配电网对于新能源新设备(如分布式能源与储能设备)的接入具有很好的兼容性，配电网与消费者之间的互动能力显著增强。智能配电网相对于传统配电网有更精细化的管理，使的整个智能电网能够更好的适应社会发展。智能配电网在技术上融合了电力电子技术、计算机网络通信技术和传感器技术，具有高集成、高互动、高自愈、高优化的特点，可以实现配电网信息业务流与消费信息流的高效双向交互和整合。此外，智能配电网的高自动化使得生产者可以对整配电网进行灵活的调控，可以全方面的提升电网的电能质量，并能使配电网的各个子系统融合成一个有机的整体[5]^{[5]}​[5]​​。 相关问题： 当前配电终端设计上，开发商注重产品的功能，较少考虑自身的信息安全防护，此外，配电终端具有点多、面广、户外运行、容易接触等特点，致使配电终端系统极易成为黑客入侵的目标，甚至工程维护人员在维护时也可能有意或无意地引入间谍或后门病毒，为背后的攻击者进一步入侵配电系统做铺垫准备工作，因此提升配电终端自身的安全防护和入侵检测能力是对新型高级持续性威胁（ＡＰＴ）的必要的应对措施[4]^{[4]}​[4]​​。 配电终端存在自身信息安全防护薄弱、攻击监测手段缺乏等问题； 随着智能配电网的快速发展，现代通信技术与计算机网络技术被广泛的应用于智能配电网中，电网与用户之间可以通过双向通信的数字网络来进行实时的信息交互。这时直接暴露在用户面前的终端（如智能电表)，将最可能成为攻击的对象。 配电终端可信安全防护方案研究[4]^{[4]}​[4]​​ 这篇论文提出了配电终端可信安全防护方案，即在配电终端上引入了可信计算的理念，采用可信硬件芯片作为引导起点，进而建立从操作系统内核、核心库到应用程序等一系列的度量与验证的启动过程，以确保在终端上运行的程序都是合法程序，以提升配电终端自身的安全防护能力。 同时在配电终端运行过程中，对文件系统的完整性进行周期检测，对运行进程的文件修改行为、网络请求行为、重要资源访问行为进行监测，监测数据用于进行动态风险辨识，以便发现病毒入侵和违规访问等安全事件，一方面保护配电系统的运行安全，也增强了配电系统对入侵的预警能力。 参考文献： 陈亮,杨晓勇.基于物联网的智能电网安全问题和挑战[J].机电工程技术,2018,47(12):161-163+176. 程晓岩,丛鹏,赵子鉴.电力系统计算机网络信息安全的防护分析[J].价值工程,2020,39(09):250-251.DOI:10.14018/j.cnki.cn13-1085/n.2020.09.106. 曹玮润,戴媛媛,周永博.计算机网络信息安全在电力系统的防护[J].长江信息通信,2021,34(01):171-173. 常方圆,李二霞,亢超群,吕春利,王靖夫,林璟锵.配电终端可信安全防护方案研究[J].计算机应用研究,2020,37(S2):256-259. 戴熙昌. 智能配电网数据传输安全研究[D].华东交通大学,2015 "},"CIRED/implementation.html":{"url":"CIRED/implementation.html","title":"实验部分内容","keywords":"","body":""}}